name: Notify New Blog Post to Telegram # 工作流程名稱

# 當有新的 push 事件發生時觸發此 workflow
on:
  push:
    branches:
      - main
    paths:
      - 'blog/**'

jobs:
  notify_new_post:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get new files in target directory
        id: get-new-files
        run: |
          TARGET_DIR="blog/"
          NEW_FILES=$(git diff --name-only --diff-filter=A HEAD~1 HEAD -- "$TARGET_DIR" | grep '\.md$')
          echo "new_files<<EOF" >> "$GITHUB_OUTPUT"
          echo "${NEW_FILES}" >> "$GITHUB_OUTPUT"
          echo "EOF" >> "$GITHUB_OUTPUT"

      - name: Process and send Telegram notification
        if: steps.get-new-files.outputs.new_files != ''
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
          NEW_POST_FILES: ${{ steps.get-new-files.outputs.new_files }}
        run: |
          set -e

          BASE_URL="https://holybear.me"

          # 函式：對字串進行 MarkdownV2 特殊字元跳脫
          escape_markdownv2() {
            local text="$1"
            printf "%s" "$text" | sed -e 's/[\\_*\[\]()~`>#+\-=|{}.!]/\\&/g'
          }

          echo "${NEW_POST_FILES}" | while IFS= read -r file_path; do
            if [ -z "$file_path" ]; then
              continue
            fi

            echo "Processing file: $file_path"

            file_content=$(tr -d '\r' < "$file_path")

            TITLE=$(echo "$file_content" | awk -F': ' '/^title:/ {print $2; exit}')
            if [ -z "$TITLE" ]; then
              TITLE=$(echo "$file_content" | awk -F'# ' '/^# / {print $2; exit}')
            fi
            if [ -z "$TITLE" ]; then
              TITLE="無標題文章"
            fi

            ESCAPED_TITLE=$(escape_markdownv2 "$TITLE")

            ARTICLE_SLUG=$(echo "$file_path" | sed -E 's|^blog/(.*)\.md$|\1|')
            ARTICLE_URL="${BASE_URL}/${ARTICLE_SLUG}"

            COMMIT_MESSAGE=$(git log -1 --pretty=%B)
            ESCAPED_COMMIT_MESSAGE=$(escape_markdownv2 "$COMMIT_MESSAGE")
            AUTHOR_NAME=$(git log -1 --pretty=%an)
            ESCAPED_AUTHOR_NAME=$(escape_markdownv2 "$AUTHOR_NAME")

            MESSAGE="*📢 New push to GitHub*\n"
            MESSAGE+="*${ESCAPED_TITLE}*\n"
            MESSAGE+="\`\`\`${ESCAPED_COMMIT_MESSAGE}\`\`\`\n"
            MESSAGE+="[➡️ 點此閱讀文章](${ARTICLE_URL})\n"
            MESSAGE+="by \`${ESCAPED_AUTHOR_NAME}\`"

            RESPONSE=$(curl -s -X POST "https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage" \
              --data-urlencode "chat_id=${TELEGRAM_CHAT_ID}" \
              --data-urlencode "text=${MESSAGE}" \
              --data-urlencode "parse_mode=MarkdownV2" \
              --data-urlencode "disable_web_page_preview=true")

            if echo "$RESPONSE" | grep -q '"ok":true'; then
              echo "✅ Telegram notification sent successfully for: $file_path"
            else
              echo "❌ Failed to send Telegram notification for: $file_path"
              echo "Telegram API Response: $RESPONSE"
            fi
          done
