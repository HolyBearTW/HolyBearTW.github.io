name: Notify New Blog Post to Telegram

on:
  workflow_run:
    workflows: ["ÈÉ®ÁΩ≤ VitePress ÈùúÊÖãÁ∂≤Á´ôÂà∞ GitHub Pages"] # Áõ£ËÅΩÁöÑ workflow ÂêçÁ®±
    types:
      - completed

jobs:
  notify_new_post:
    runs-on: ubuntu-latest
    # Âè™ÊúâÂú®ÈÉ®ÁΩ≤ÊàêÂäüÊôÇÊâçÂü∑Ë°åÊ≠§ job
    if: github.event.workflow_run.conclusion == 'success'

    steps:
      - name: ‰∏ãËºâÊñ∞ÊñáÁ´†ÂàóË°®Áî¢Áâ©
        uses: actions/download-artifact@v4
        with:
          name: new-post-files
          path: .
      
      - name: Ê™¢Êü•ÊòØÂê¶ÊúâÊñ∞ÊñáÁ´†
        id: check-files
        run: |
          if [ -s new_post_files.txt ] && [ -n "$(cat new_post_files.txt)" ]; then
            echo "ÂÅµÊ∏¨Âà∞Êñ∞ÊñáÁ´†ÂàóË°®ÔºåÊ∫ñÂÇôÁôºÈÄÅÈÄöÁü•„ÄÇ"
            echo "has_new_files=true" >> "$GITHUB_OUTPUT"
          else
            echo "ÁÑ°Êñ∞ÊñáÁ´†Ôºå‰∏çÈúÄÈÄöÁü•„ÄÇ"
            echo "has_new_files=false" >> "$GITHUB_OUTPUT"
          fi

      - name: ÈÅ∑Âá∫ÁâπÂÆö Commit ÁöÑÁ®ãÂºèÁ¢º
        if: steps.check-files.outputs.has_new_files == 'true'
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.workflow_run.head_sha }} # ÈÅ∑Âá∫Ëß∏ÁôºÈÉ®ÁΩ≤ÊµÅÁ®ãÁöÑÈÇ£ÂÄã commit

      - name: ËôïÁêÜ‰∏¶ÁôºÈÄÅ Telegram ÈÄöÁü•
        if: steps.check-files.outputs.has_new_files == 'true'
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        run: |
          set -e
          NEW_POST_FILES=$(cat new_post_files.txt)
          if [ -z "$NEW_POST_FILES" ]; then
            echo "ÊñáÁ´†ÂàóË°®ÁÇ∫Á©∫Ôºå‰∏≠Ê≠¢Âü∑Ë°å„ÄÇ"
            exit 0
          fi
          
          # ... (‰∏ãÊñπÁÇ∫ËàáÊÇ®ÂéüÊ™îÊ°àÂÆåÂÖ®Áõ∏ÂêåÁöÑÁôºÈÄÅÈÇèËºØ) ...
          
          BASE_URL="https://holybear.me"
          escape_markdownv2() {
            printf "%s" "$1" | sed -e 's/[\\_*\[\]()~`>#+\-=|{}.!]/\\&/g'
          }
          for file_path in $NEW_POST_FILES; do
            echo "Processing file: $file_path"
            file_content=$(cat "$file_path")
            TITLE=$(echo "$file_content" | awk -F': ' '/^title:/ {print $2; exit}')
            if [ -z "$TITLE" ]; then
              TITLE=$(echo "$file_content" | awk -F'# ' '/^# / {print $2; exit}')
            fi
            [ -z "$TITLE" ] && TITLE="ÁÑ°Ê®ôÈ°åÊñáÁ´†"
            CATEGORY=""
            CATEGORY=$(echo "$file_content" | grep -A 1 -iE '^\s*category:' | grep -E '^\s*-\s*' | head -n1 | sed -E 's/^\s*-\s*(.*)/\1/')
            [ -z "$CATEGORY" ] && CATEGORY=$(echo "$file_content" | grep -iE '^\s*category:\s*\[.*\]' | sed -E 's/.*\[\s*([^, ]*).*/\1/')
            [ -z "$CATEGORY" ] && CATEGORY=$(echo "$file_content" | grep -iE '^\s*category:\s*[^-\[]+' | head -n1 | sed -E 's/^\s*category:\s*//')
            CATEGORY=$(echo "$CATEGORY" | sed -E 's/^[[:space:]]+|[[:space:]]+$//g' | sed -E 's/[\x27"\/]//g')
            if [ -n "$CATEGORY" ]; then
              TITLE="„Äê${CATEGORY}„Äë${TITLE}"
            fi
            ARTICLE_SLUG=$(echo "$file_path" | sed -E 's|^blog/(.*)\.md$|\1|')
            ARTICLE_URL="${BASE_URL}/blog/${ARTICLE_SLUG}"
            COMMIT_MESSAGE=$(git log -1 --pretty=%B)
            AUTHOR_NAME=$(git log -1 --pretty=%an)
            ESCAPED_TITLE=$(escape_markdownv2 "$TITLE")
            ESCAPED_COMMIT_MESSAGE=$(escape_markdownv2 "$COMMIT_MESSAGE")
            ESCAPED_AUTHOR_NAME=$(escape_markdownv2 "$AUTHOR_NAME")
            MESSAGE=$'*üì¢ New push to GitHub*\n'
            MESSAGE+=$'*'"${ESCAPED_TITLE}"$'*\n'
            MESSAGE+=$'```commit\n'"${ESCAPED_COMMIT_MESSAGE}"$'\n```'
            MESSAGE+=$'[‚û°Ô∏è ÈªûÊ≠§Èñ±ËÆÄÊñáÁ´†]('"${ARTICLE_URL}"$')\n'
            MESSAGE+='by `'"${ESCAPED_AUTHOR_NAME}"'`'
            RESPONSE=$(curl -s -X POST "https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage" \
              --data-urlencode "chat_id=${TELEGRAM_CHAT_ID}" \
              --data-urlencode "text=${MESSAGE}" \
              --data-urlencode "parse_mode=MarkdownV2" \
              --data-urlencode "disable_web_page_preview=true")
            if echo "$RESPONSE" | grep -q '"ok":true'; then
              echo "‚úÖ Telegram notification sent successfully for: $file_path"
            else
              echo "‚ùå Failed to send Telegram notification for: $file_path"
              echo "Telegram API Response: $RESPONSE"
            fi
          done
